#!/usr/bin/env python
# -*- coding: utf-8 -*-
import sys
import os
import tempfile
import subprocess
import distutils


# See <https://stackoverflow.com/questions/4856583/
#   how-do-i-pipe-a-subprocess-call-to-a-text-file>

tmp_path = tempfile.mktemp(prefix="ogrep")
long_forms = {}
long_forms["-n"] = ["--line-number", "--line-buffered"]
long_forms["-H"] = ["--with-filename"]
always_use = ["-n", "-H"]  # add line number to grep output
args = []
used_singles = []

for i in range(1, len(sys.argv)):
    args.append(sys.argv[i])

# Collect short versions of long options used:
for i in range(1, len(sys.argv)):
    for k, options in long_forms.items():
        for option in options:
            if sys.argv[i] == option:
                if sys.argv[i] not in used_singles:
                    used_singles.append(k)

for arg in always_use:
    if (arg not in args) and (arg not in used_singles):
        args.append(arg)

with open(tmp_path, 'w') as outs:
    subprocess.call(["grep"] + args, stdout=outs)
    # For a cross-platform way to find the executable, see
    # (unused) <https://gist.github.com/techtonik/4368898>

cmd_parts = ["outputinspector", tmp_path]
profile = os.environ.get('HOME')
if profile is None:
    profile = os.environ.get('USERPROFILE')
if profile is not None:
    share = os.path.join(profile, '.local', 'share')
    try_dt = os.path.join('applications', 'outputinspector.desktop')
    if os.path.isfile(try_dt):
        # use the desktop file so that the taskbar button has an icon
        # other than the default X (such as x.org) icon.
        dt_runner = 'gtk-launch'
        if distutils.spawn.find_executable(dt_runner):
            cmd_parts = [dt_runner, try_dt, tmp_path]
        else:
            print("* The desktop runner is not known on your OS ({} is"
                  " not present). The program will run directly using"
                  " the default icon.".format(dt_runner))
    else:
        print("* The desktop file is not installed ({} is"
              " not present). The program will run directly using"
              " the default icon.".format(try_dt))
subprocess.call(cmd_parts)

if os.path.isfile(tmp_path):
    os.remove(tmp_path)
